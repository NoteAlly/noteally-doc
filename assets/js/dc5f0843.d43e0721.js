"use strict";(self.webpackChunknotally_doc=self.webpackChunknotally_doc||[]).push([[81],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=o,g=d["".concat(c,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={},i="Docker",l={unversionedId:"api/docker",id:"api/docker",title:"Docker",description:"Installing Docker",source:"@site/docs/api/docker.md",sourceDirName:"api",slug:"/api/docker",permalink:"/noteally-doc/docs/api/docker",draft:!1,editUrl:"https://github.com/NoteAlly/docs/api/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Auth",permalink:"/noteally-doc/docs/api/Auth"},next:{title:"Downloads",permalink:"/noteally-doc/docs/api/downloads"}},c={},s=[{value:"Installing Docker",id:"installing-docker",level:2},{value:"Getting Docker Image",id:"getting-docker-image",level:2},{value:"Running the Docker Image",id:"running-the-docker-image",level:2},{value:"Removing the Docker Image",id:"removing-the-docker-image",level:2},{value:"Stopping the Container",id:"stopping-the-container",level:3},{value:"Removing the Container",id:"removing-the-container",level:3},{value:"Removing the Image",id:"removing-the-image",level:3},{value:"Running the Docker Image with development settings",id:"running-the-docker-image-with-development-settings",level:2}],p={toc:s},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker"},"Docker"),(0,o.kt)("h2",{id:"installing-docker"},"Installing Docker"),(0,o.kt)("p",null,"To follow the instructions in this document, you need to have Docker installed on your machine. To install Docker, follow the instructions in the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"official documentation"),"."),(0,o.kt)("p",null,"If on Ubuntu you can run the following commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install docker.io\nsudo systemctl start docker\nsudo systemctl enable docker\n# To run docker without sudo\nsudo usermod -aG docker <computer-name>\n")),(0,o.kt)("h2",{id:"getting-docker-image"},"Getting Docker Image"),(0,o.kt)("p",null,"The Docker image of the project API and the implementation files can be found at the github repository ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/NoteAlly/noteally-backend"},"docker-images"),". The image is automatically built and pushed to the repository when a new commit is pushed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," branch."),(0,o.kt)("p",null,"There are two ways of getting the image:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Pulling the image from the repository:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull ghcr.io/noteally/noteally-backend:main\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Getting the Dockerfile from the repository and building the image from it:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://raw.githubusercontent.com/NoteAlly/noteally-backend/main/Dockerfile\ndocker build -t noteally-backend .\n")),(0,o.kt)("p",null,"After building or pulling the image, it should look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker images\nREPOSITORY                                TAG       IMAGE ID       CREATED         SIZE\nghcr.io/noteally/noteally-backend         main      6e4c28970ef6   19 hours ago   1.11GB\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," The image name (",(0,o.kt)("em",{parentName:"p"},"REPOSITORY"),") might be different depending on the strategy used."),(0,o.kt)("p",null,"or if using docker desktop:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"docker-desktop-build",src:n(7550).Z,width:"1011",height:"406"})),(0,o.kt)("h2",{id:"running-the-docker-image"},"Running the Docker Image"),(0,o.kt)("p",null,"To run the image, you need to use the command ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," and pass the environment variables needed as arguments. This can be done by passing the arguments directly to the command or by using a ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file, like the following:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Passing the arguments directly to the command:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d -p 8000:8000 --name noteally-backend_app \\\n                            -e DJANGO_KEY=<DJANGO_KEY> \\\n                            -e AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY_ID> \\\n                            -e AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY> \\\n                            -e AWS_REGION_NAME=<AWS_REGION_NAME> \\\n                            -e AWS_S3_BUCKET_NAME=<AWS_S3_BUCKET_NAME> \\\n                            -e AWS_COGNITO_DOMAIN=<AWS_COGNITO_DOMAIN> \\\n                            -e DB_NAME=<DB_NAME> \\\n                            -e DB_USERNAME=<DB_USERNAME> \\\n                            -e DB_PASSWORD=<DB_PASSWORD> \\\n                            -e DB_PORT=<DB_PORT> \\\n                            -e DB_HOST=<DB_HOST> \\\n                            ghcr.io/noteally/noteally-backend:main\n")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Note:")," Replace the environment variables (",(0,o.kt)("em",{parentName:"p"},"values between ",(0,o.kt)("inlineCode",{parentName:"em"},"<")," and ",(0,o.kt)("inlineCode",{parentName:"em"},">")),") with the values you want to use.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Using a ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d -p 8000:8000 --name noteally-backend_app --env-file .env ghcr.io/noteally/noteally-backend:main\n")),(0,o.kt)("p",null,"The environment variables needed are the ones described in the ",(0,o.kt)("a",{parentName:"p",href:"#running-the-docker-image"},"1st option"),"."),(0,o.kt)("p",null,"After running the image, you should be able to see it running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ docker ps\nCONTAINER ID   IMAGE                                    COMMAND                  CREATED          STATUS          PORTS                     NAMES\n1a2b3c4d5e6f   ghcr.io/noteally/noteally-backend:main   "/bin/sh -c \'echo \\"D\u2026"  2 minutes ago    Up 2 minutes    0.0.0.0:8000->8000/tcp    noteally-backend_app\n')),(0,o.kt)("p",null,"or if using docker desktop:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"docker-desktop-run",src:n(5113).Z,width:"1011",height:"406"})),(0,o.kt)("p",null,"If everything went well, you should be able to access the API at ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:8000/"),"."),(0,o.kt)("h2",{id:"removing-the-docker-image"},"Removing the Docker Image"),(0,o.kt)("h3",{id:"stopping-the-container"},"Stopping the Container"),(0,o.kt)("p",null,"To stop the container, you need to use the command ",(0,o.kt)("inlineCode",{parentName:"p"},"docker stop")," and pass the container name or id as argument as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop noteally-backend_app\n")),(0,o.kt)("h3",{id:"removing-the-container"},"Removing the Container"),(0,o.kt)("p",null,"To remove the container, you need to use the command ",(0,o.kt)("inlineCode",{parentName:"p"},"docker rm")," and pass the container name or id as argument as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm noteally-backend_app\n")),(0,o.kt)("h3",{id:"removing-the-image"},"Removing the Image"),(0,o.kt)("p",null,"To remove the image, you need to use the command ",(0,o.kt)("inlineCode",{parentName:"p"},"docker rmi")," and pass the image name or id as argument as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker rmi ghcr.io/noteally/noteally-backend:main\n")),(0,o.kt)("h2",{id:"running-the-docker-image-with-development-settings"},"Running the Docker Image with development settings"),(0,o.kt)("p",null,"The previous image is built with production settings.\nIf you want to run the image with development settings, you need clone the repository and change the Dockerfile to use the development settings file instead of the production settings file by changing the CMD line to use --settings=NoteAlly.development_settings instead of --settings=NoteAlly.production_settings and then build the image using the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t noteally-backend .\n")),(0,o.kt)("p",null,"After building the image, you can run it using the same commands as before."))}m.isMDXComponent=!0},7550:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/docker-desktop-build-b36a8523a8736c32e15c49d593562cdd.png"},5113:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/docker-desktop-run-ec5b1e721c3fb949bd722e771f805aaf.png"}}]);