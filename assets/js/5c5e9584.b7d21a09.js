"use strict";(self.webpackChunknotally_doc=self.webpackChunknotally_doc||[]).push([[91],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),c=a,k=d["".concat(s,".").concat(c)]||d[c]||m[c]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1145:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={},i="Tutors",l={unversionedId:"api/tutors",id:"api/tutors",title:"Tutors",description:"Tutors are users that post content.",source:"@site/docs/api/tutors.md",sourceDirName:"api",slug:"/api/tutors",permalink:"/noteally-doc/docs/api/tutors",draft:!1,editUrl:"https://github.com/NoteAlly/docs/api/tutors.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Study Areas and Universities",permalink:"/noteally-doc/docs/api/study_area_unis"},next:{title:"User",permalink:"/noteally-doc/docs/api/user"}},s={},u=[{value:"List Tutors",id:"list-tutors",level:2},{value:"Pagination",id:"pagination",level:3},{value:"Filtering",id:"filtering",level:3},{value:"Ordering",id:"ordering",level:3},{value:"Get a tutor",id:"get-a-tutor",level:2}],p={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tutors"},"Tutors"),(0,a.kt)("p",null,"Tutors are users that post content."),(0,a.kt)("p",null,"The endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"/tutors")," is used to list tutors, using the HTTP method ",(0,a.kt)("inlineCode",{parentName:"p"},"GET"),"."),(0,a.kt)("h2",{id:"list-tutors"},"List Tutors"),(0,a.kt)("p",null,"To simply list all available tutors, you just need to send a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"/tutors")," as illustrated below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},"GET /tutors\n")),(0,a.kt)("p",null,"Your response will look like something similar to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "next": null,\n    "previous": null,\n    "current_page": 1,\n    "total_pages": 1,\n    "total_elements": 1,\n    "this_page_elements": 1,\n    "results": [\n        {\n            "id": 1,\n            "sub": "058feb08-7baf-4a6c-8428-26544018ww9f",\n            "first_name": "John",\n            "last_name": "Doe",\n            "email": "john@ua.pt",\n            "premium": true,\n            "karma_score": 0,\n            "description": "I\'m a student at the University of Aveiro.",\n            "tutoring_services": true,\n            "profile_picture": "https://noteally.s3.eu-west-3.amazonaws.com/john.jpg",\n            "study_areas": [\n                {\n                    "id": 1,\n                    "name": "Computer Science"\n                }\n            ]\n        }\n        {\n            ...\n        }\n    ]\n}\n')),(0,a.kt)("h3",{id:"pagination"},"Pagination"),(0,a.kt)("p",null,"The first six attributes are related to pagination, and their meaning is as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"next"),": the URL of the next page of results. If there is no next page, this attribute is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),";"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"previous"),": the URL of the previous page of results. If there is no previous page, this attribute is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),";"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"current_page"),": the number of the current page;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"total_pages"),": the total number of pages;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"total_elements"),": the total number of tutors in the database;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"this_page_elements"),": the number of tutors in the current page.")),(0,a.kt)("admonition",{title:"Note",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"By default the API returns 10 tutors per page. If you want to change this, you can do so by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"page_size")," query parameter. For example, if you want to list 20 tutors per page, you can do so by sending a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"/tutors?page_size=20"),"."),(0,a.kt)("p",{parentName:"admonition"},"If you want to navigate to page number 5, for example, you can do so by sending a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"/tutors?p=5"),":")),(0,a.kt)("h3",{id:"filtering"},"Filtering"),(0,a.kt)("p",null,"If you desire to filter the tutors, you can do so by using the following query parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"name")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter for tutors that contain ",(0,a.kt)("inlineCode",{parentName:"td"},"name")," in their name.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"author")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter for tutors that were uploaded by ",(0,a.kt)("inlineCode",{parentName:"td"},"author"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"study_area")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter for tutors that belong to the study area with ",(0,a.kt)("inlineCode",{parentName:"td"},"study_area")," as its ID.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"karma_score")),(0,a.kt)("td",{parentName:"tr",align:null},"Filter for tutors that have at least ",(0,a.kt)("inlineCode",{parentName:"td"},"min_likes")," likes.")))),(0,a.kt)("p",null,"Here is an example of a request that filters for tutors that belong to the study area with ID 1 and that have at least 10 likes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},"GET /tutors?study_area=1\n")),(0,a.kt)("h3",{id:"ordering"},"Ordering"),(0,a.kt)("p",null,"If you desire to order the tutors, you can do so by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"order_by")," query parameter. The ",(0,a.kt)("inlineCode",{parentName:"p"},"order_by")," query parameter can take the following values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name"),": orders the tutors by name;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-name"),": orders the tutors by name in reverse order;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"karma_score"),": orders the tutors by price from lowest to highest;"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-karma_score"),": orders the tutors by price from highest to lowest; ")),(0,a.kt)("p",null,"For instance, if you want to order the tutors by price from highest to lowest, you can do the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},"GET /tutors?order_by=karma_score\n")),(0,a.kt)("h2",{id:"get-a-tutor"},"Get a tutor"),(0,a.kt)("p",null,"To get a tutor, you need to send a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"/tutors/{id}"),", where ",(0,a.kt)("inlineCode",{parentName:"p"},"{id}")," is the ID of the tutor you want to get. For example, if you want to get the tutor with ID 1, you can do so by sending a ",(0,a.kt)("inlineCode",{parentName:"p"},"GET")," request to the endpoint ",(0,a.kt)("inlineCode",{parentName:"p"},"/tutors/1"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},"GET /tutors/1\n")),(0,a.kt)("p",null,"The response will look like something similar to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{ \n    "id": 1,\n    "sub": "058feb08-7baf-4a6c-8428-26544018ww9f",\n    "first_name": "John",\n    "last_name": "Doe",\n    "email": "john@ua.pt",\n    "premium": true,\n    "karma_score": 0,\n    "description": "I\'m a student at the University of Aveiro.",\n    "tutoring_services": true,\n    "profile_picture": "https://noteally.s3.eu-west-3.amazonaws.com/john.jpg",\n    "study_areas": [\n        {\n            "id": 1,\n            "name": "Computer Science"\n        }\n    ] \n}\n')),(0,a.kt)("p",null,"If the tutor was not found, the response will be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error": "Tutor does not exist"\n}\n')),(0,a.kt)("p",null,"If the tutor does not exist."))}m.isMDXComponent=!0}}]);